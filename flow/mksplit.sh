#!/bin/bash
# Copyright 2015 The Go Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

godoc go/ast | awk '
BEGIN {
	print "// generated by mksplit.sh\n"
	print "package flow"
	print ""
	print "import \"go/ast\""
	print ""
	print "func astSplit(x ast.Node) []ast.Node {"
	print "\tvar out []ast.Node"
	print "\tswitch x := x.(type) {"
}

/^type .* struct/ {
	name=$2
	inType=1
	code = ""
}

/^}/ {
	inType = 0
}

inType && /^  / && ($2 == "Expr" || $2 == "Stmt" || $2 == "*Ident" || $2 == "*CallExpr" || $2 == "*BlockStmt") {
	code = code "\t\tif x." $1 " != nil { out = append(out, x." $1 ") }\n"
}

inType && /^  / && ($2 == "[]Expr" || $2 == "[]Stmt" || $2 == "[]*Ident" || $2 == "[]*ImportSpec" || $2 == "[]Spec") {
	code = code "\t\tfor _, y := range x." $1 " { out = append(out, y) }\n"
}

/^func \(.*\) End\(\) token\.Pos/ && $3 == "*" name ")" {
	print "\tcase *ast." name ":\n" code
}

END {
	print "\t}"
	print "\treturn out"
	print "}"
}
' | gofmt > split.go
